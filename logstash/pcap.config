input {
 stdin {}
}

filter {
  csv {
   columns => ["timestamp", "src_addr", "dst_addr", "protocol", "version", "temp_ip_length", "src_port", "src_port_name", "dst_port", "dst_port_name", "temp_packet_length" ]
   separator => ";"
   remove_field => "[column12]"
  }
  grok {
   match => { "temp_ip_length" => '%{NUMBER:ip_length:int}' }
   remove_field => "[temp_ip_length]"
  }
  grok {
    match => { "temp_packet_length" => "%{NUMBER:packet_length:int}"}
    remove_field => "[temp_packet_length]"
 }
 geoip {
    source => "src_addr"
    target => "src_geoip"
  }
  geoip {
    source => "dst_addr"
    target => "dst_geoip"
  }
   date {
      match => [ "timestamp", "YYYY-MM-DD HH:mm:ss.S" ]
      locale => en
      remove_field => "timestamp"
   }
}

output {
 stdout { codec => rubydebug }
 elasticsearch {
	 protocol => "http"
		 host => "localhost"
		 template => "/home/vagrant/pcap-template.json"
                 template_overwrite => true
 }
}
